How did viewing a diff between two versions of a file help you see the bug that was introduced?

 - Showing the previous and the new lines together, 
without the lines which are the same in both files. 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

 - By saving time, memory space and effort not just saving different versions, but looking for them when needed. 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

 - Pros: you don't have too many commits, usually useless
 - Cons: you can not have enough, since it's your own choice, or either have too many, but loosing more time

 Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

  - The ones that allow to modify several files at a time must be more programming oriented. 

  How can you use the commands git log and git diff to view the history of files?

  - git log show me a list of the commits used and their specific ID, and when I want to compare a commit with the previous, I can take their IDs, and do a git diff with the older first and the newer second, which will show me the differences. 

How might using version control make you more confident to make changes that could break something?

  - It's better to know that if something fails I will be able to go back to the last time it worked. 

Now that you have your workspace set up, what do you want to try using Git for?

 - For Rstudio scripts, because I've lost so many
